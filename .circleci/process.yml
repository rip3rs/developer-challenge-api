# Orb 'circleci/node@4.2.0' resolved to 'circleci/node@4.2.0'
version: 2
jobs:
  ng_build:
    docker:
    - image: cimg/node:14.15.5
    working_directory: ~/challenge
    steps:
    - checkout
    - run:
        command: pwd && ls -lah api
    - run:
        command: |
          if [ ! -f "package.json" ]; then
            echo
            echo "---"
            echo "Unable to find your package.json file. Did you forget to set the app-dir parameter?"
            echo "---"
            echo
            echo "Current directory: $(pwd)"
            echo
            echo
            echo "List directory: "
            echo
            ls
            exit 1
          fi
        name: Checking for package.json.
        working_directory: ~/challenge/ng-challenge
    - run:
        command: |
          if [ -f "package-lock.json" ]; then
            echo "Found package-lock.json file, assuming lockfile"
            cp package-lock.json /tmp/node-project-lockfile
          elif [ -f "npm-shrinkwrap.json" ]; then
            echo "Found npm-shrinkwrap.json file, assuming lockfile"
            cp npm-shrinkwrap.json /tmp/node-project-lockfile
          elif [ -f "yarn.lock" ]; then
            echo "Found yarn.lock file, assuming lockfile"
            cp yarn.lock /tmp/node-project-lockfile
          fi
        name: Determine lockfile
        working_directory: ~/challenge/ng-challenge
    - restore_cache:
        keys:
        - node-deps-v1-{{ .Branch }}-{{ checksum "/tmp/node-project-lockfile" }}
    - run:
        command: |
          if [[ ! -z "npm i" ]]; then
            echo "Running override package installation command:"
            npm i
          else
            npm ci
          fi
        name: Installing NPM packages
        working_directory: ~/challenge/ng-challenge
    - save_cache:
        key: node-deps-v1-{{ .Branch }}-{{ checksum "/tmp/node-project-lockfile" }}
        paths:
        - node_modules
    - run:
        command: cd ng-challenge && npm run build
    - run:
        command: mv ng-challenge/public api
    - run:
        command: pwd && ls -lah api
    - persist_to_workspace:
        root: .
        paths: .
  deploy:
    docker:
    - image: cimg/node:14.15.5
    working_directory: ~/challenge
    steps:
    - attach_workspace:
        at: .
    - run:
        command: git config --global user.email "jbriggsr3@gmail.com" && git config --global user.name "Joseph Briggs"
    - run:
        command: git add . && git commit -m "update project"
    - run:
        command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git `git subtree split --prefix api main`:main --force
workflows:
  production:
    jobs:
    - ng_build:
        filters:
          branches:
            only: main
    - deploy:
        filters:
          branches:
            only: main
        requires:
        - ng_build
        context: heroku-jb-ng-challenge
  version: 2

# Original config.yml file:
# version: 2.1
# 
# description: Deploy challenge to Heroku for testing purposes
# 
# parameters:
#   node_image_tag:
#     type: string
#     default: \"14.15.5\"
# 
# orbs:
#   node: circleci/node@4.2.0
# 
# jobs:
#   ng_build:
#     working_directory: ~/challenge
#     executor:
#       name: node/default
#       tag: <<pipeline.parameters.node_image_tag>>
#     steps:
#       - checkout
#       - run: pwd && ls -lah api
#       - node/install-packages:
#           app-dir: ~/challenge/ng-challenge
#           cache-path: node_modules
#           override-ci-command: npm i
#       - run: cd ng-challenge && npm run build
#       - run: mv ng-challenge/public api
#       - run: pwd && ls -lah api
#       - persist_to_workspace:
#           root: .
#           paths: .
# 
#   deploy:
#     working_directory: ~/challenge
#     executor:
#       name: node/default
#       tag: <<pipeline.parameters.node_image_tag>>
#     steps:
#       - attach_workspace:
#           at: .
#       - run: git config --global user.email \"jbriggsr3@gmail.com\" && git config --global user.name \"Joseph Briggs\"
#       - run: git add . && git commit -m \"update project\"
#       - run: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git `git subtree split --prefix api main`:main --force
# 
# workflows:
#   production:
#     jobs:
#       - ng_build:
#           filters: &filters-production
#             branches:
#               only: main
#       - deploy:
#           context: heroku-jb-ng-challenge
#           requires:
#             - ng_build
#           filters:
#             <<: *filters-production